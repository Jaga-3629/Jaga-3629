class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
        self.prev=None
class linkedlist:
    def __init__(self):
        self.head=None
    def push(self,data):
        fl=0
        if(self.head==None):
            nn=Node(data)
            prevn=nn
            self.head=nn
            self.head.next=self.head.prev=nn
            fl=1
        else:
            nn=Node(data)
            if(fl==1):
                msk=self.head.prev
            else:
                msk=self.head.prev.prev
            self.head.prev=None
            msk.next=nn
            msk.next.next=self.head
    def display(self):
        tmp=self.head
        co=0
        if(self.head is None):
            print("The list is empty")
        else:
            print(tmp.data)
            while(tmp.next!=self.head):
                tmp=tmp.next
                print(tmp.data)
ll=linkedlist()
ll.push(1)
ll.push(2)
ll.push(3)
ll.display()
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
        self.prev=None
class linkedlist:
    def __init__(self):
        self.head=None
        self.tail=None
    def push(self,data):
        fl=0
        if(self.head==None):
            nn=Node(data)
            self.head=self.tail=nn
            self.head.prev=self.head.next=nn
            self.tail.next=nn
            self.head.prev=nn
        else:
            nn=Node(data)
            self.tail.next = nn
            nn.previous = self.tail    
            self.tail = nn
            self.head.prev=self.tail
            self.tail.next = self.head
    def display(self):
        tmp=self.head
        co=0
        if(self.head is None):
            print("The list is empty")
        else:
            print(tmp.data)
            while(tmp.next!=self.head):
                tmp=tmp.next
                print(tmp.data)
    def func(self):
        print(self.tail.prev.data)
    '''def delete(self):
        tmp=self.head
        if(tmp.data%2!=0):
            self.delete1(tmp)
        while(tmp.next!=self.head):
            tmp=tmp.next
            if(tmp.data%2!=0):
                self.delete1(tmp)'''
    def delete1(self,node):
        if self.head.next == self.head:
            self.head=self.tail = None
        else:
            node.prev.next = node.next
            node.next.prev = node.prev
            if(self.head == node):
                self.head = node.next
ll=linkedlist()
ll.push(1)
ll.push(3)
ll.push(8)
ll.push(4)
ll.push(6)
ll.push(2)
ll.push(5)
#print(ll.tail.prev.data)
#ll.delete1(ll.tail)
#ll.display()
ll.func()
